@using BI.SGP.BLL.DataModels;
@using BI.SGP.BLL.Models.Detail;
@using BI.SGP.BLL.WF;
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head{
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" />
        <title>RFQ Detail</title>
        <link rel="stylesheet" href="@Url.Content("~/assets/css/bootstrap.min.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/font-awesome.min.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/opensans.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/jquery-ui-1.10.3.full.min.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/chosen.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/daterangepicker.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/ace.min.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/ace-rtl.min.css")" />
        <link rel="stylesheet" href="@Url.Content("~/assets/css/ace-skins.min.css")" />
        <script src="@Url.Content("~/assets/js/ace-extra.min.js")"></script>
    </head>
}
@section featured {
    <div class="main-content">
        <div class="breadcrumbs" id="breadcrumbs">
            <script type="text/javascript">
                try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
            </script>

            <ul class="breadcrumb">
                <li>
                    <i class="icon-home home-icon"></i>
                    <a href="~/Home/Home">Home</a>
                </li>
                <li class="active">RFQ Detail</li>
            </ul><!-- .breadcrumb -->
        </div>
        <div id="page-content" class="page-content" style="padding: 8px 12px 0px">
            <div class="row">
                <div class="col-xs-12">
                    <div class="row-fluid wizard-actions" style="margin-top:5px; margin-bottom:5px;">

                        <a id="PDFContent">

                            @{
                                string[] WFIDS = { "203", "204", "205", "206", "207" };
                                if (ViewData["CurrWFID"] != null && ViewData["LastWFID"] != null)
                                {
                                    if (WFIDS.Contains(ViewData["CurrWFID"].ToString()))
                                    {
                                        @MvcHtmlString.Create(@"<button id='btnDownlPDF' class='btn btn-purple' title=''>
                                                                 Download PDF
                                                                <i class='icon-file small-30'></i>
                                                                 </button>");

                                    }
                                }
                            }
                        </a>

                        <button id="btnReQuote" class="btn btn-info" onclick="saveData('ReQuote')">
                            Re-Quote
                            <i class="icon-save small-30"></i>
                        </button>
                        <button id="btnClone" class="btn btn-info" onclick="saveData('Clone')">
                            Clone
                            <i class="icon-save small-30"></i>
                        </button>
                        <button id="btnSave" class="btn btn-primary save-operation" onclick="saveData('Save')">
                            Save
                            <i class="icon-save small-30"></i>
                        </button>
                        <button id="btnSubmit" class="btn btn-success save-operation" title="">
                            <i class="icon-arrow-right icon-on-right"></i>
                            Submit
                        </button>
                        <button id="btnSkip" class="btn btn-danger save-operation" data-last="Finish " title="">
                            Skip
                            <i class="icon-reply small-30"></i>
                        </button>
                        <button id="btnCosting" class="btn btn-info btnCosting" style="display:none" onclick="window.open('@Url.Content("~/CostIO/Input?RFQID=")'+_dataId)">
                            Cost Analysis
                            <i class="icon-zoom-in small-30"></i>
                        </button>
                        <button id="btnCancel" class="btn btn-danger save-operation" title="">
                            <i class="icon-remove icon-on-right"></i>
                            Cancel
                        </button>
                    </div>

                    <div class="widget-header widget-header-blue widget-header-flat">
                        <h4 class="lighter">RFQ Detail</h4>

                        <div class="widget-toolbar">
                            <label>
                                <a href="javascript:void(0)" onclick="return showFilesDialog();" id="UploadAttachment" title="Upload Attachment">
                                    <i class="icon-paper-clip"></i>
                                </a>
                            </label>
                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="widget-main">
                            <div id="fuelux-wizard" class="row-fluid" data-target="#step-container">
                                <ul id="wizardWF"></ul>
                            </div>
                            <div id="MainRFQContent">
                                @{
                                    WFTemplate template = ViewBag.WFTemplate;
                                    List<FieldCategory> lfc = ViewBag.Categories;
                                    @MvcHtmlString.Create(BI.SGP.BLL.UIManager.DetailUIHelper.GenrateCategories(lfc, template));
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- /.row -->
        </div><!-- /.page-content -->
    </div><!-- /.main-content -->
    @*</div>*@
    <!-- basic scripts -->

    <script src="@Url.Content("~/assets/js/jquery-2.0.3.min.js")"></script>
    <script src="@Url.Content("~/assets/js/bootstrap.min.js")"></script>
    <script src="@Url.Content("~/assets/js/typeahead-bs2.min.js")"></script>
    <script src="@Url.Content("~/assets/js/jquery-ui-1.10.3.full.min.js")"></script>
    <script src="@Url.Content("~/assets/js/jquery.ui.touch-punch.min.js")"></script>
    <script src="@Url.Content("~/assets/js/date-time/daterangepicker.min.js")"></script>
    <script src="@Url.Content("~/assets/js/chosen.jquery.min.js")"></script>
    <script src="@Url.Content("~/assets/js/ace-elements.min.js")"></script>
    <script src="@Url.Content("~/assets/js/date-time/moment.min.js")"></script>
    <script src="@Url.Content("~/assets/js/ace.min.js")"></script>
    <script src="@Url.Content("~/assets/js/jquery.valida")"></script>
    <script src="@Url.Content("~/Scripts/jquery.formatCurrency-1.4.0.js")"></script>
    <script src="@Url.Content("~/Scripts/syslib.js")"></script>
    <script src="@Url.Content("~/Scripts/wflib.js")"></script>

    <script type="text/javascript">
    var _dataId = '@ViewBag.DataId';
    var rootUrl = '@Url.Content("~/")';
    var wfStatus = '@(template.Status == WorkflowStatus.Finished ? "Finished": "")';

    $(document).ready(function () {
        $("#page-content").resize(function (e) {
            $(".detail-subdata-list").css("width", $("#page-content").width() - 31);
        });
        createWizard();
        pageInit();

        //extfun();
        toolingDef();
    });

    function toolingDef() {
        if($("#ToolingType_1").val() == ""){
            $("#ToolingType_1").val("Sample");
        }
        if($("#ToolingType_2").val() == ""){
            $("#ToolingType_2").val("Mass Production");
        }
    }

    function createWizard() {
        $("#wizardWF").biWizard({
            templateName: 'B2FQuotation',
            readonly: false,
            entityId: _dataId,
            submitUrl: '@Url.Content("~/B2F/WFSkip")',
            getDataFunction: getPostData,
            checkDataCondition: checkDataCondition,
            onComplete: saveAfter,
            onCreateComplete:createWizardComplete
        });

        $("#btnSkip").biSkip({
            templateName: 'B2FQuotation',
            entityId: _dataId,
            submitUrl: '@Url.Content("~/B2F/WFSkip")',
            getDataFunction: getPostData,
            checkDataCondition: checkDataCondition,
            onComplete: saveAfter
        });

        $("#btnSubmit").unbind('click').click(function () {
            $("#btnSkip").biSkip("submit");
        });
        $('#btnDownlPDF').click(function () {
            window.open('@Url.Content("~/B2F/DownloadPDF")' + "?RFQID=" + _dataId);
        });
        $("#btnCancel").unbind('click').click(function () {
            $("#HitRateStatus").val("Cancelled");
            $("#btnSkip").biSkip("cancel", @template.LastActivity.ID);
        });
    }

        function createWizardComplete() {
            $("#btnCosting").hide();
            var wfc = $("#wizardWF").children();
            if(wfc != null && wfc.length > 0) {
                var curId = $(wfc[0]).attr("curId");
                if(curId == 202) {
                    $("#btnCosting").show();
                }
            }
        }

    function addDetail(obj) {
        var striptString = "$('#tb-" + obj + "').append(subdata_" + obj + ")";
        eval(striptString);
        pageInit();
    }

    function removeDetail(obj) {
        $(obj).parent().parent().remove();
    }

    function getPostData(operation) {
        op = operation || 'Save';
        var data = {
            dataId: _dataId,
            operation: op,
            data: $.bi.form.getAllCategoryData()
        };
        return data;
    }

    function saveData(operation) {
        $.bi.overlay.show();
        var postData = getPostData(operation);

        $.post('@Url.Content("~/B2F/SaveData")', { postData: JSON.stringify(postData) }, function (data) {
            $.bi.overlay.hide();
            saveAfter(data);
        }, "json");
    }

    function saveAfter(data) {
        if (data.SysMsg.isPass == false) {
            $.bi.dialog.show({ title: 'Message', content: data.SysMsg.MessageString, buttons: [] });
        } else {
            _dataId = data.DataId;
            if (typeof (updateTempToNormal) == "function") {
                updateTempToNormal();
            }
            if (data.Html != "") {
                wfStatus = data.wfStatus;
                $('#PDFContent').html(data.PDF);
                $('#MainRFQContent').html(data.Html);
                pageInit();
            }

            $.bi.dialog.show({ title: 'Success', content: ' Successful Operation!', width: 300 });
            createWizard();
        }
    }

    function checkDataCondition() {
        if ($("#CapabilityCheck").val() == "Out of Capability" || $("#HitRateStatus").val() == "Cancelled") {
            return false;
        } else {
            return true;
        }
    }

    function pageInit() {

        if (wfStatus == "Finished") {
            $(".save-operation").attr("disabled", "true");
        } else {
            $(".save-operation").removeAttr("disabled");
        }

        $.bi.setComponentEvent();

        $("#OEM").autocomplete({
            source: '@Url.Content("~/Setting/GetAuotCompleteValue")'
        });


        $("#OEM").keydown(function (){
            var e=$(this).event||window.event;
            var code=parseInt(e.keyCode);

            if(code==13)
            {
                $.post('@Url.Content("~/Setting/GetOEMInvolvedValue")', { OEM: $(this).val()}, function (data) {
                    if(data.CustomerPartNumber!="")
                    {
                        $("#CustomerPartNumber").val(data.CustomerPartNumber);
                    }
                    if(data.GAMBDM!="")
                    {
                        $("#GAMBDM").val(data.GAMBDM);
                    }
                    if(data.Initiator!="")
                    {
                        $("#Initiator").val(data.Initiator);
                    }
                    if(data.PricingAnalyst!="")
                    {
                        $("#PricingAnalyst").val(data.PricingAnalyst);
                    }
                    if(data.TechnicalQuoting!="")
                    {
                        $("#TechnicalQuoting").val(data.TechnicalQuoting);
                    }
                    if(data.PrimaryContact!="")
                    {
                        $("#PrimaryContact").val(data.PrimaryContact);
                    }
                    if(data.CustomerContact!="")
                    {
                        $("#CustomerContact").val(data.CustomerContact);
                    }
                    if(data.ProgramName!="")
                    {
                        $("#ProgramName").val(data.ProgramName);
                    }
                }, "json");
            }
        })


        @*$("#ProjectNumber").unbind('change').change(function (){
       
            $.post('@Url.Content("~/Setting/GetCostModuel")', { ProjectNumber: $(this).val()}, function (data) {
                if(data.Plant!="")
                {
                    if (data.Plant == "B2" || data.Plant == "2F" || data.Plant == "B2F")
                    {
                        $("#Building").val("B2F");
                    }
                    else
                    {
                        $("#Building").val(data.Plant);
                    }
                }
                if(data.Yield!="")
                {
                    $("#Yield").val(data.Yield);
                } 
                if(data.MaterialCost!="")
                {
                    $("#MaterialCost").val(data.MaterialCost);
                } if(data.VariableCost!="")
                {
                    $("#VariableCost").val(data.VariableCost);
                }
                if(data.FixedCost!="")
                {
                    $("#FixedCost").val(data.FixedCost);
                }
                if(data.TotalCost!="")
                {
                    $("#TotalCost").val(data.TotalCost);
                }
            }, "json");
           
        })*@
        $("#ShipmentTerms").autocomplete({
            source: '@Url.Content("~/Setting/GetAuotCompleteValueForShipmentTerms")'
        });
        $("#Location").autocomplete({
            source: '@Url.Content("~/Setting/GetAuotCompleteValueForLocation")'
            });

        $('#VolumePerMonth').unbind('change').change(GetComputedValue);
        $('#DueDate').unbind('change').change(GetComputedValue);
        $('#ExpectedLifeTime').unbind('change').change(GetComputedValue);
        $('#EstQuoteSize').unbind('change').change(GetComputedValue);
        $('#MinComputedSize').unbind('change').change(GetComputedValue);
        $('#string Currency').unbind('change').change(GetComputedValue);
        $('#ExchangRatePerUSD').unbind('change').change(GetComputedValue);
        $('#SetupCharge').unbind('change').change(GetComputedValue);
        $('#EtestCharge').unbind('change').change(GetComputedValue);
        $('#ToolingCharge').unbind('change').change(GetComputedValue);
        $('#ShipTermsAdder').unbind('change').change(GetComputedValue);
        $('#MOV').unbind('change').change(GetComputedValue);
        $('#TargetPrice').unbind('change').change(GetComputedValue);
        $('#AssemblyCost').unbind('change').change(GetComputedValue);
        $('#PCBFPCPrice1').unbind('change').change(GetComputedValue);
        $('#PCBFPCPrice2').unbind('change').change(GetComputedValue);
        $('#PCBFPCPrice3').unbind('change').change(GetComputedValue);
        $('#PCBFPCPrice4').unbind('change').change(GetComputedValue);
        $('#PCBFPCPrice5').unbind('change').change(GetComputedValue);
        $('#SMTBOMCost').unbind('change').change(GetComputedValue);
        $('#BOMMarkup1').unbind('change').change(GetComputedValue);
        $('#BOMMarkup2').unbind('change').change(GetComputedValue);
        $('#BOMMarkup3').unbind('change').change(GetComputedValue);
        $('#BOMMarkup4').unbind('change').change(GetComputedValue);
        $('#BOMMarkup5').unbind('change').change(GetComputedValue);
        $('#AssemblyMarkup1').unbind('change').change(GetComputedValue);
        $('#AssemblyMarkup2').unbind('change').change(GetComputedValue);
        $('#AssemblyMarkup3').unbind('change').change(GetComputedValue);
        $('#AssemblyMarkup4').unbind('change').change(GetComputedValue);
        $('#AssemblyMarkup5').unbind('change').change(GetComputedValue);
        $('#UnitType').unbind('change').change(GetComputedValue);
        $('#UnitSizeWidth').unbind('change').change(GetComputedValue);
        $('#UnitSizeLength').unbind('change').change(GetComputedValue);
        $('#UnitPerArray').unbind('change').change(GetComputedValue);
        $('#ArrayPerWorkingPanel').unbind('change').change(GetComputedValue);
        $('#UnitArea').unbind('change').change(GetComputedValue);
        $('#ArraySizeWidth').unbind('change').change(GetComputedValue);
        $('#ArraySizeLength').unbind('change').change(GetComputedValue);
        $('#PanelSizeWidth').unbind('change').change(GetComputedValue);
        $('#PanelSizeLength').unbind('change').change(GetComputedValue);
        $('#BoardThickness').unbind('change').change(GetComputedValue);
        $('#CompetitiveWinPrice1').unbind('change').change(GetComputedValue);
        $('#CompetitiveWinPrice2').unbind('change').change(GetComputedValue);
        $('#Yield').unbind('change').change(GetComputedValue);
        $('#MaterialCost').unbind('change').change(GetComputedValue);
        $('#VariableCost').unbind('change').change(GetComputedValue);
        $('#FixedCost').unbind('change').change(GetComputedValue);
        $('#PriceType1').unbind('change').change(GetComputedValue);
        $('#PriceType2').unbind('change').change(GetComputedValue);
        $('#PriceType3').unbind('change').change(GetComputedValue);
        $('#PriceType4').unbind('change').change(GetComputedValue);
        $('#PriceType5').unbind('change').change(GetComputedValue);
        $('#LayerCount').unbind('change').change(GetComputedValue);
        $('#UnitOrArray').unbind('change').change(GetComputedValue);
        $('#Holes').unbind('change').change(GetComputedValue);
        $('#SmallestHole').unbind('change').change(GetComputedValue);
        $('#OutlineTool1_1').unbind('change').change(GetComputedValue);
        $('#OutlineTool2_1').unbind('change').change(GetComputedValue);
        $('#TopCoverlayTool_1').unbind('change').change(GetComputedValue);
        $('#BottomCoverlayTool_1').unbind('change').change(GetComputedValue);
        $('#ETestCADArtworkNRE_1').unbind('change').change(GetComputedValue);
        $('#OutlineTool1_2').unbind('change').change(GetComputedValue);
        $('#OutlineTool2_2').unbind('change').change(GetComputedValue);
        $('#TopCoverlayTool_2').unbind('change').change(GetComputedValue);
        $('#BottomCoverlayTool_2').unbind('change').change(GetComputedValue);
        $('#ETestCADArtworkNRE_2').unbind('change').change(GetComputedValue);
        $('#OutlineTool1_3').unbind('change').change(GetComputedValue);
        $('#OutlineTool2_3').unbind('change').change(GetComputedValue);
        $('#TopCoverlayTool_3').unbind('change').change(GetComputedValue);
        $('#BottomCoverlayTool_3').unbind('change').change(GetComputedValue);
        $('#ETestCADArtworkNRE_3').unbind('change').change(GetComputedValue);
        $('#OutlineTool1_4').unbind('change').change(GetComputedValue);
        $('#OutlineTool2_4').unbind('change').change(GetComputedValue);
        $('#TopCoverlayTool_4').unbind('change').change(GetComputedValue);
        $('#BottomCoverlayTool_4').unbind('change').change(GetComputedValue);
        $('#ETestCADArtworkNRE_4').unbind('change').change(GetComputedValue);
        }


        function GetComputedValue() {
            var actionUrl = '@Url.Content("~/B2F/GetComputedValue")';
            var postData = {};

            postData.VolumePerMonth= $('#VolumePerMonth').val(),
            postData.DueDate= $('#DueDate').val(),
            postData.ExpectedLifeTime= $('#ExpectedLifeTime').val(),
            postData.EstQuoteSize= $('#EstQuoteSize').val(),
            // postData.MinComputedSize= $('#MinComputedSize').val(),
            postData.Currency= $('#Currency').val(),
            postData.ExchangRatePerUSD= $('#ExchangRatePerUSD').val(),
            postData.SetupCharge= $('#SetupCharge').val(),
            postData.EtestCharge= $('#EtestCharge').val(),
            postData.ToolingCharge= $('#ToolingCharge').val(),
            postData.ShipTermsAdder= $('#ShipTermsAdder').val(),
            postData.MOV= $('#MOV').val(),
            postData.TargetPrice= $('#TargetPrice').val(),
            postData.AssemblyCost= $('#AssemblyCost').val(),
            postData.PCBFPCPrice1= $('#PCBFPCPrice1').val(),
            postData.PCBFPCPrice2= $('#PCBFPCPrice2').val(),
            postData.PCBFPCPrice3= $('#PCBFPCPrice3').val(),
            postData.PCBFPCPrice4= $('#PCBFPCPrice4').val(),
            postData.PCBFPCPrice5= $('#PCBFPCPrice5').val(),
            postData.SMTBOMCost= $('#SMTBOMCost').val(),
            postData.BOMMarkup1= $('#BOMMarkup1').val(),
            postData.BOMMarkup2= $('#BOMMarkup2').val(),
            postData.BOMMarkup3= $('#BOMMarkup3').val(),
            postData.BOMMarkup4= $('#BOMMarkup4').val(),
            postData.BOMMarkup5= $('#BOMMarkup5').val(),
            postData.AssemblyMarkup1= $('#AssemblyMarkup1').val(),
            postData.AssemblyMarkup2= $('#AssemblyMarkup2').val(),
            postData.AssemblyMarkup3= $('#AssemblyMarkup3').val(),
            postData.AssemblyMarkup4= $('#AssemblyMarkup4').val(),
            postData.AssemblyMarkup5= $('#AssemblyMarkup5').val(),
            postData.UnitType= $('#UnitType').val(),
            postData.UnitSizeWidth= $('#UnitSizeWidth').val(),
            postData.UnitSizeLength= $('#UnitSizeLength').val(),
            postData.UnitArea= $('#UnitArea').val(),
            postData.ArrayPerWorkingPanel=$('#ArrayPerWorkingPanel').val();
            postData.UnitPerArray= $('#UnitPerArray').val(),
            postData.ArraySizeWidth= $('#ArraySizeWidth').val(),
            postData.ArraySizeLength= $('#ArraySizeLength').val(),
            postData.PanelSizeWidth= $('#PanelSizeWidth').val(),
            postData.PanelSizeLength= $('#PanelSizeLength').val(),
            postData.BoardThickness= $('#BoardThickness').val(),
            postData.CompetitiveWinPrice1= $('#CompetitiveWinPrice1').val(),
            postData.CompetitiveWinPrice2= $('#CompetitiveWinPrice2').val(),
            postData.Yield= $('#Yield').val(),
            postData.MaterialCost= $('#MaterialCost').val(),
            postData.VariableCost= $('#VariableCost').val(),
            postData.FixedCost= $('#FixedCost').val(),
            postData.PriceType1= $('#PriceType1').val(),
            postData.PriceType2= $('#PriceType2').val(),
            postData.PriceType3= $('#PriceType3').val(),
            postData.PriceType4= $('#PriceType4').val(),
            postData.PriceType5= $('#PriceType5').val(),
            postData.LayerCount= $('#LayerCount').val(),
            postData.UnitOrArray= $('#UnitOrArray').val(),
            postData.Holes= $('#Holes').val(),
            postData.SmallestHole= $('#SmallestHole').val(),
            postData.OutlineTool1_1=$('#OutlineTool1_1').val(),
            postData.OutlineTool2_1=$('#OutlineTool2_1').val(),
            postData.TopCoverlayTool_1=$('#TopCoverlayTool_1').val(),
            postData.BottomCoverlayTool_1=$('#BottomCoverlayTool_1').val(),
            postData.ETestCADArtworkNRE_1=$('#ETestCADArtworkNRE_1').val(),
            postData.OutlineTool1_2=$('#OutlineTool1_2').val(),
            postData.OutlineTool2_2=$('#OutlineTool2_2').val(),
            postData.TopCoverlayTool_2=$('#TopCoverlayTool_2').val(),
            postData.BottomCoverlayTool_2=$('#BottomCoverlayTool_2').val(),
            postData.ETestCADArtworkNRE_2=$('#ETestCADArtworkNRE_2').val(),
            postData.OutlineTool1_3=$('#OutlineTool1_3').val(),
            postData.OutlineTool2_3=$('#OutlineTool2_3').val(),
            postData.TopCoverlayTool_3=$('#TopCoverlayTool_3').val(),
            postData.BottomCoverlayTool_3=$('#BottomCoverlayTool_3').val(),
            postData.ETestCADArtworkNRE_3=$('#ETestCADArtworkNRE_3').val(),
            postData.OutlineTool1_4=$('#OutlineTool1_4').val(),
            postData.OutlineTool2_4=$('#OutlineTool2_4').val(),
            postData.TopCoverlayTool_4=$('#TopCoverlayTool_4').val(),
            postData.BottomCoverlayTool_4=$('#BottomCoverlayTool_4').val(),
            postData.ETestCADArtworkNRE_4=$('#ETestCADArtworkNRE_4').val()


            $.post('@Url.Content("~/B2F/GetComputedValue")', { postData: JSON.stringify(postData) },
                function (data) {
                    $('#MOQ').val(data.MOQ);
                    $('#TargetPrice1').val(data.TargetPrice1);
                    $('#TargetASP').val(data.TargetASP);
                    $('#MinASP').val(data.MinASP);
                    $('#TargetSqIn').val(data.TargetSqIn);
                    $('#MinSqInch').val(data.MinSqInch);
                    $('#TargetCLsqin').val(data.TargetCLsqin);
                    $('#MinCLsqin').val(data.MinCLsqin);
                    $('#TargetVSActucal').val(data.TargetVSActucal);
                    $('#BOMCost1').val(data.BOMCost1);
                    $('#BOMCost2').val(data.BOMCost2);
                    $('#BOMCost3').val(data.BOMCost3);
                    $('#BOMCost4').val(data.BOMCost4);
                    $('#BOMCost5').val(data.BOMCost5);
                    $('#BOMPrice1').val(data.BOMPrice1);
                    $('#BOMPrice2').val(data.BOMPrice2);
                    $('#BOMPrice3').val(data.BOMPrice3);
                    $('#BOMPrice4').val(data.BOMPrice4);
                    $('#BOMPrice5').val(data.BOMPrice5);
                    $('#AssemblyCost1').val(data.AssemblyCost1);
                    $('#AssemblyCost2').val(data.AssemblyCost2);
                    $('#AssemblyCost3').val(data.AssemblyCost3);
                    $('#AssemblyCost4').val(data.AssemblyCost4);
                    $('#AssemblyCost5').val(data.AssemblyCost5);
                    $('#AssemblyPrice1').val(data.AssemblyPrice1);
                    $('#AssemblyPrice2').val(data.AssemblyPrice2);
                    $('#AssemblyPrice3').val(data.AssemblyPrice3);
                    $('#AssemblyPrice4').val(data.AssemblyPrice4);
                    $('#AssemblyPrice5').val(data.AssemblyPrice5);
                    $('#TotalPrice1').val(data.TotalPrice1);
                    $('#TotalPrice2').val(data.TotalPrice2);
                    $('#TotalPrice3').val(data.TotalPrice3);
                    $('#TotalPrice4').val(data.TotalPrice4);
                    $('#TotalPrice5').val(data.TotalPrice5);
                    $('#PanelUtilization').val(data.PanelUtilization);
                    $('#TotalCost').val(data.TotalCost);
                    $('#OP').val(data.OP);
                    $('#OP1').val(data.OP1);
                    $('#OP2').val(data.OP2);
                    $('#OP3').val(data.OP3);
                    $('#OP4').val(data.OP4);
                    $('#OP5').val(data.OP5);
                    $('#MP').val(data.MP);
                    $('#MP1').val(data.MP1);
                    $('#MP2').val(data.MP2);
                    $('#MP3').val(data.MP3);
                    $('#MP4').val(data.MP4);
                    $('#MP5').val(data.MP5);
                    $('#Total_1').val(data.Total_1);
                    $('#Total_2').val(data.Total_2);
                    $('#Total_3').val(data.Total_3);
                    $('#Total_4').val(data.Total_4);
                    $('#UnitPerWorkingPanel').val(data.UnitPerWorkingPanel);
                }, "json");
        
        }

        function extfun() {
            if ($("#tb-ToolingSummary tr").length >= 2) {
                addDetail('ToolingSummary');
                $("#tb-ToolingSummary tr:eq(1) td:eq(1) input:eq(0)").val('Prototype Tooling Price');
                $("#tb-ToolingSummary tr:eq(2) td:eq(0)").html("");
                $("#tb-ToolingSummary tr:eq(2) td:eq(1) input:eq(0)").val('MP Tooling Price');
            }
        }
    </script>

@Html.Partial("~/Views/Export/Files.cshtml")
}
